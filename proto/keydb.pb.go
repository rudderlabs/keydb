// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.1
// source: proto/keydb.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ErrorCode enum for different types of errors
type ErrorCode int32

const (
	ErrorCode_NO_ERROR       ErrorCode = 0
	ErrorCode_WRONG_NODE     ErrorCode = 1 // Key should be handled by a different node
	ErrorCode_SCALING        ErrorCode = 2 // There is a scaling operation in progress, the client should retry with an exponential backoff
	ErrorCode_INTERNAL_ERROR ErrorCode = 3
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0: "NO_ERROR",
		1: "WRONG_NODE",
		2: "SCALING",
		3: "INTERNAL_ERROR",
	}
	ErrorCode_value = map[string]int32{
		"NO_ERROR":       0,
		"WRONG_NODE":     1,
		"SCALING":        2,
		"INTERNAL_ERROR": 3,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_keydb_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_proto_keydb_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_proto_keydb_proto_rawDescGZIP(), []int{0}
}

// GetRequest contains multiple keys to retrieve
type GetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keys          []string               `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_proto_keydb_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keydb_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_proto_keydb_proto_rawDescGZIP(), []int{0}
}

func (x *GetRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

// GetResponse contains the retrieved values and cluster information
type GetResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Exists         []bool                 `protobuf:"varint,1,rep,packed,name=exists,proto3" json:"exists,omitempty"`                                      // This list should be populated in the same order as the "keys" field in GetRequest
	ClusterSize    uint32                 `protobuf:"varint,2,opt,name=cluster_size,json=clusterSize,proto3" json:"cluster_size,omitempty"`                // Number of nodes in the cluster
	NodesAddresses []string               `protobuf:"bytes,3,rep,name=nodesAddresses,proto3" json:"nodesAddresses,omitempty"`                              // When the cluster_size changes the client can use this variable to connect to the new nodes
	ErrorCode      ErrorCode              `protobuf:"varint,4,opt,name=error_code,json=errorCode,proto3,enum=keydb.ErrorCode" json:"error_code,omitempty"` // If WRONG_NODE or SCALING is received the client should get the new cluster size via GetNodeInfo and retry
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_proto_keydb_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keydb_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_proto_keydb_proto_rawDescGZIP(), []int{1}
}

func (x *GetResponse) GetExists() []bool {
	if x != nil {
		return x.Exists
	}
	return nil
}

func (x *GetResponse) GetClusterSize() uint32 {
	if x != nil {
		return x.ClusterSize
	}
	return 0
}

func (x *GetResponse) GetNodesAddresses() []string {
	if x != nil {
		return x.NodesAddresses
	}
	return nil
}

func (x *GetResponse) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_NO_ERROR
}

// PutRequest contains multiple key-value pairs to store
// The client will automatically split PutRequest into multiple ones, one per node depending on the keys and hash-ranges
// Then the requests are sent in parallel to all the concerned nodes and put back into a single PutResponse
type PutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keys          []string               `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	TtlSeconds    uint64                 `protobuf:"varint,2,opt,name=ttl_seconds,json=ttlSeconds,proto3" json:"ttl_seconds,omitempty"`
	ErrorCode     ErrorCode              `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3,enum=keydb.ErrorCode" json:"error_code,omitempty"` // If WRONG_NODE or SCALING is received the client should get the new cluster size via GetNodeInfo and retry
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutRequest) Reset() {
	*x = PutRequest{}
	mi := &file_proto_keydb_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRequest) ProtoMessage() {}

func (x *PutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keydb_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRequest.ProtoReflect.Descriptor instead.
func (*PutRequest) Descriptor() ([]byte, []int) {
	return file_proto_keydb_proto_rawDescGZIP(), []int{2}
}

func (x *PutRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *PutRequest) GetTtlSeconds() uint64 {
	if x != nil {
		return x.TtlSeconds
	}
	return 0
}

func (x *PutRequest) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_NO_ERROR
}

// PutResponse contains the operation result and cluster information
type PutResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Success        bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ClusterSize    uint32                 `protobuf:"varint,2,opt,name=cluster_size,json=clusterSize,proto3" json:"cluster_size,omitempty"`                // Number of nodes in the cluster
	NodesAddresses []string               `protobuf:"bytes,3,rep,name=nodesAddresses,proto3" json:"nodesAddresses,omitempty"`                              // When the cluster_size changes the client can use this variable to connect to the new nodes
	ErrorCode      ErrorCode              `protobuf:"varint,4,opt,name=error_code,json=errorCode,proto3,enum=keydb.ErrorCode" json:"error_code,omitempty"` // If WRONG_NODE or SCALING is received the client should get the new cluster size via GetNodeInfo and retry
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PutResponse) Reset() {
	*x = PutResponse{}
	mi := &file_proto_keydb_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutResponse) ProtoMessage() {}

func (x *PutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keydb_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutResponse.ProtoReflect.Descriptor instead.
func (*PutResponse) Descriptor() ([]byte, []int) {
	return file_proto_keydb_proto_rawDescGZIP(), []int{3}
}

func (x *PutResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PutResponse) GetClusterSize() uint32 {
	if x != nil {
		return x.ClusterSize
	}
	return 0
}

func (x *PutResponse) GetNodesAddresses() []string {
	if x != nil {
		return x.NodesAddresses
	}
	return nil
}

func (x *PutResponse) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_NO_ERROR
}

// GetNodeInfoRequest to retrieve information about a node
type GetNodeInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        uint32                 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"` // ID of the node to get info from
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeInfoRequest) Reset() {
	*x = GetNodeInfoRequest{}
	mi := &file_proto_keydb_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeInfoRequest) ProtoMessage() {}

func (x *GetNodeInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keydb_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeInfoRequest.ProtoReflect.Descriptor instead.
func (*GetNodeInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_keydb_proto_rawDescGZIP(), []int{4}
}

func (x *GetNodeInfoRequest) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

// GetNodeInfoResponse contains information about the node and the cluster
type GetNodeInfoResponse struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	NodeId                uint32                 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`                                                // ID of the node
	ClusterSize           uint32                 `protobuf:"varint,2,opt,name=cluster_size,json=clusterSize,proto3" json:"cluster_size,omitempty"`                                 // Number of nodes in the cluster
	NodesAddresses        []string               `protobuf:"bytes,3,rep,name=nodesAddresses,proto3" json:"nodesAddresses,omitempty"`                                               // When the cluster_size changes the client can use this variable to connect to the new nodes
	HashRanges            []uint32               `protobuf:"varint,4,rep,packed,name=hash_ranges,json=hashRanges,proto3" json:"hash_ranges,omitempty"`                             // Hash ranges handled by this node
	LastSnapshotTimestamp uint64                 `protobuf:"varint,5,opt,name=last_snapshot_timestamp,json=lastSnapshotTimestamp,proto3" json:"last_snapshot_timestamp,omitempty"` // Unix timestamp of the last snapshot
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetNodeInfoResponse) Reset() {
	*x = GetNodeInfoResponse{}
	mi := &file_proto_keydb_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeInfoResponse) ProtoMessage() {}

func (x *GetNodeInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keydb_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeInfoResponse.ProtoReflect.Descriptor instead.
func (*GetNodeInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_keydb_proto_rawDescGZIP(), []int{5}
}

func (x *GetNodeInfoResponse) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *GetNodeInfoResponse) GetClusterSize() uint32 {
	if x != nil {
		return x.ClusterSize
	}
	return 0
}

func (x *GetNodeInfoResponse) GetNodesAddresses() []string {
	if x != nil {
		return x.NodesAddresses
	}
	return nil
}

func (x *GetNodeInfoResponse) GetHashRanges() []uint32 {
	if x != nil {
		return x.HashRanges
	}
	return nil
}

func (x *GetNodeInfoResponse) GetLastSnapshotTimestamp() uint64 {
	if x != nil {
		return x.LastSnapshotTimestamp
	}
	return 0
}

// LoadSnapshotsRequest initiates loading snapshots from cloud storage
type LoadSnapshotsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HashRange     []uint32               `protobuf:"varint,1,rep,packed,name=hash_range,json=hashRange,proto3" json:"hash_range,omitempty"` // repeated means 0 or more values, pass none to load all snapshots handled by that node
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadSnapshotsRequest) Reset() {
	*x = LoadSnapshotsRequest{}
	mi := &file_proto_keydb_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadSnapshotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadSnapshotsRequest) ProtoMessage() {}

func (x *LoadSnapshotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keydb_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadSnapshotsRequest.ProtoReflect.Descriptor instead.
func (*LoadSnapshotsRequest) Descriptor() ([]byte, []int) {
	return file_proto_keydb_proto_rawDescGZIP(), []int{6}
}

func (x *LoadSnapshotsRequest) GetHashRange() []uint32 {
	if x != nil {
		return x.HashRange
	}
	return nil
}

// LoadSnapshotsResponse contains the result of the snapshot loading operation
type LoadSnapshotsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // Error message if the operation failed
	NodeId        uint32                 `protobuf:"varint,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`                  // ID of the node that processed the request
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadSnapshotsResponse) Reset() {
	*x = LoadSnapshotsResponse{}
	mi := &file_proto_keydb_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadSnapshotsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadSnapshotsResponse) ProtoMessage() {}

func (x *LoadSnapshotsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keydb_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadSnapshotsResponse.ProtoReflect.Descriptor instead.
func (*LoadSnapshotsResponse) Descriptor() ([]byte, []int) {
	return file_proto_keydb_proto_rawDescGZIP(), []int{7}
}

func (x *LoadSnapshotsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LoadSnapshotsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *LoadSnapshotsResponse) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

// CreateSnapshotRequests initiates snapshot creation
type CreateSnapshotsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HashRange     []uint32               `protobuf:"varint,1,rep,packed,name=hash_range,json=hashRange,proto3" json:"hash_range,omitempty"` // repeated means 0 or more values, pass none to create all snapshots
	FullSync      bool                   `protobuf:"varint,2,opt,name=full_sync,json=fullSync,proto3" json:"full_sync,omitempty"`           // pass true to force the nodes to create snapshots from scratch (not incremental)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSnapshotsRequest) Reset() {
	*x = CreateSnapshotsRequest{}
	mi := &file_proto_keydb_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSnapshotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnapshotsRequest) ProtoMessage() {}

func (x *CreateSnapshotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keydb_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnapshotsRequest.ProtoReflect.Descriptor instead.
func (*CreateSnapshotsRequest) Descriptor() ([]byte, []int) {
	return file_proto_keydb_proto_rawDescGZIP(), []int{8}
}

func (x *CreateSnapshotsRequest) GetHashRange() []uint32 {
	if x != nil {
		return x.HashRange
	}
	return nil
}

func (x *CreateSnapshotsRequest) GetFullSync() bool {
	if x != nil {
		return x.FullSync
	}
	return false
}

// CreateSnapshotsResponse contains the result of the snapshot creation
type CreateSnapshotsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // Error message if the operation failed
	NodeId        uint32                 `protobuf:"varint,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`                  // ID of the node that processed the request
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSnapshotsResponse) Reset() {
	*x = CreateSnapshotsResponse{}
	mi := &file_proto_keydb_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSnapshotsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnapshotsResponse) ProtoMessage() {}

func (x *CreateSnapshotsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keydb_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnapshotsResponse.ProtoReflect.Descriptor instead.
func (*CreateSnapshotsResponse) Descriptor() ([]byte, []int) {
	return file_proto_keydb_proto_rawDescGZIP(), []int{9}
}

func (x *CreateSnapshotsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateSnapshotsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateSnapshotsResponse) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

// ScaleRequest changes the number of nodes in the cluster
type ScaleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// When the cluster_size changes the scaler can use this field to tell all nodes which addresses are to be broadcast
	// to clients
	NodesAddresses []string `protobuf:"bytes,1,rep,name=nodesAddresses,proto3" json:"nodesAddresses,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ScaleRequest) Reset() {
	*x = ScaleRequest{}
	mi := &file_proto_keydb_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScaleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleRequest) ProtoMessage() {}

func (x *ScaleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keydb_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleRequest.ProtoReflect.Descriptor instead.
func (*ScaleRequest) Descriptor() ([]byte, []int) {
	return file_proto_keydb_proto_rawDescGZIP(), []int{10}
}

func (x *ScaleRequest) GetNodesAddresses() []string {
	if x != nil {
		return x.NodesAddresses
	}
	return nil
}

// ScaleResponse contains the result of the scaling operation
type ScaleResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Success             bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	PreviousClusterSize uint32                 `protobuf:"varint,2,opt,name=previous_cluster_size,json=previousClusterSize,proto3" json:"previous_cluster_size,omitempty"`
	NewClusterSize      uint32                 `protobuf:"varint,3,opt,name=new_cluster_size,json=newClusterSize,proto3" json:"new_cluster_size,omitempty"`
	ErrorMessage        string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // Error message if the operation failed
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ScaleResponse) Reset() {
	*x = ScaleResponse{}
	mi := &file_proto_keydb_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScaleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleResponse) ProtoMessage() {}

func (x *ScaleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keydb_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleResponse.ProtoReflect.Descriptor instead.
func (*ScaleResponse) Descriptor() ([]byte, []int) {
	return file_proto_keydb_proto_rawDescGZIP(), []int{11}
}

func (x *ScaleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ScaleResponse) GetPreviousClusterSize() uint32 {
	if x != nil {
		return x.PreviousClusterSize
	}
	return 0
}

func (x *ScaleResponse) GetNewClusterSize() uint32 {
	if x != nil {
		return x.NewClusterSize
	}
	return 0
}

func (x *ScaleResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type ScaleCompleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScaleCompleteRequest) Reset() {
	*x = ScaleCompleteRequest{}
	mi := &file_proto_keydb_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScaleCompleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleCompleteRequest) ProtoMessage() {}

func (x *ScaleCompleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keydb_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleCompleteRequest.ProtoReflect.Descriptor instead.
func (*ScaleCompleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_keydb_proto_rawDescGZIP(), []int{12}
}

type ScaleCompleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScaleCompleteResponse) Reset() {
	*x = ScaleCompleteResponse{}
	mi := &file_proto_keydb_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScaleCompleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScaleCompleteResponse) ProtoMessage() {}

func (x *ScaleCompleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keydb_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScaleCompleteResponse.ProtoReflect.Descriptor instead.
func (*ScaleCompleteResponse) Descriptor() ([]byte, []int) {
	return file_proto_keydb_proto_rawDescGZIP(), []int{13}
}

func (x *ScaleCompleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_keydb_proto protoreflect.FileDescriptor

const file_proto_keydb_proto_rawDesc = "" +
	"\n" +
	"\x11proto/keydb.proto\x12\x05keydb\" \n" +
	"\n" +
	"GetRequest\x12\x12\n" +
	"\x04keys\x18\x01 \x03(\tR\x04keys\"\xa1\x01\n" +
	"\vGetResponse\x12\x16\n" +
	"\x06exists\x18\x01 \x03(\bR\x06exists\x12!\n" +
	"\fcluster_size\x18\x02 \x01(\rR\vclusterSize\x12&\n" +
	"\x0enodesAddresses\x18\x03 \x03(\tR\x0enodesAddresses\x12/\n" +
	"\n" +
	"error_code\x18\x04 \x01(\x0e2\x10.keydb.ErrorCodeR\terrorCode\"r\n" +
	"\n" +
	"PutRequest\x12\x12\n" +
	"\x04keys\x18\x01 \x03(\tR\x04keys\x12\x1f\n" +
	"\vttl_seconds\x18\x02 \x01(\x04R\n" +
	"ttlSeconds\x12/\n" +
	"\n" +
	"error_code\x18\x03 \x01(\x0e2\x10.keydb.ErrorCodeR\terrorCode\"\xa3\x01\n" +
	"\vPutResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fcluster_size\x18\x02 \x01(\rR\vclusterSize\x12&\n" +
	"\x0enodesAddresses\x18\x03 \x03(\tR\x0enodesAddresses\x12/\n" +
	"\n" +
	"error_code\x18\x04 \x01(\x0e2\x10.keydb.ErrorCodeR\terrorCode\"-\n" +
	"\x12GetNodeInfoRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\rR\x06nodeId\"\xd2\x01\n" +
	"\x13GetNodeInfoResponse\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\rR\x06nodeId\x12!\n" +
	"\fcluster_size\x18\x02 \x01(\rR\vclusterSize\x12&\n" +
	"\x0enodesAddresses\x18\x03 \x03(\tR\x0enodesAddresses\x12\x1f\n" +
	"\vhash_ranges\x18\x04 \x03(\rR\n" +
	"hashRanges\x126\n" +
	"\x17last_snapshot_timestamp\x18\x05 \x01(\x04R\x15lastSnapshotTimestamp\"5\n" +
	"\x14LoadSnapshotsRequest\x12\x1d\n" +
	"\n" +
	"hash_range\x18\x01 \x03(\rR\thashRange\"o\n" +
	"\x15LoadSnapshotsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12\x17\n" +
	"\anode_id\x18\x03 \x01(\rR\x06nodeId\"T\n" +
	"\x16CreateSnapshotsRequest\x12\x1d\n" +
	"\n" +
	"hash_range\x18\x01 \x03(\rR\thashRange\x12\x1b\n" +
	"\tfull_sync\x18\x02 \x01(\bR\bfullSync\"q\n" +
	"\x17CreateSnapshotsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12\x17\n" +
	"\anode_id\x18\x03 \x01(\rR\x06nodeId\"6\n" +
	"\fScaleRequest\x12&\n" +
	"\x0enodesAddresses\x18\x01 \x03(\tR\x0enodesAddresses\"\xac\x01\n" +
	"\rScaleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x122\n" +
	"\x15previous_cluster_size\x18\x02 \x01(\rR\x13previousClusterSize\x12(\n" +
	"\x10new_cluster_size\x18\x03 \x01(\rR\x0enewClusterSize\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\"\x16\n" +
	"\x14ScaleCompleteRequest\"1\n" +
	"\x15ScaleCompleteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess*J\n" +
	"\tErrorCode\x12\f\n" +
	"\bNO_ERROR\x10\x00\x12\x0e\n" +
	"\n" +
	"WRONG_NODE\x10\x01\x12\v\n" +
	"\aSCALING\x10\x02\x12\x12\n" +
	"\x0eINTERNAL_ERROR\x10\x032\xdb\x03\n" +
	"\vNodeService\x12.\n" +
	"\x03Get\x12\x11.keydb.GetRequest\x1a\x12.keydb.GetResponse\"\x00\x12.\n" +
	"\x03Put\x12\x11.keydb.PutRequest\x1a\x12.keydb.PutResponse\"\x00\x12F\n" +
	"\vGetNodeInfo\x12\x19.keydb.GetNodeInfoRequest\x1a\x1a.keydb.GetNodeInfoResponse\"\x00\x12L\n" +
	"\rLoadSnapshots\x12\x1b.keydb.LoadSnapshotsRequest\x1a\x1c.keydb.LoadSnapshotsResponse\"\x00\x12R\n" +
	"\x0fCreateSnapshots\x12\x1d.keydb.CreateSnapshotsRequest\x1a\x1e.keydb.CreateSnapshotsResponse\"\x00\x124\n" +
	"\x05Scale\x12\x13.keydb.ScaleRequest\x1a\x14.keydb.ScaleResponse\"\x00\x12L\n" +
	"\rScaleComplete\x12\x1b.keydb.ScaleCompleteRequest\x1a\x1c.keydb.ScaleCompleteResponse\"\x00B#Z!github.com/rudderlabs/keydb/protob\x06proto3"

var (
	file_proto_keydb_proto_rawDescOnce sync.Once
	file_proto_keydb_proto_rawDescData []byte
)

func file_proto_keydb_proto_rawDescGZIP() []byte {
	file_proto_keydb_proto_rawDescOnce.Do(func() {
		file_proto_keydb_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_keydb_proto_rawDesc), len(file_proto_keydb_proto_rawDesc)))
	})
	return file_proto_keydb_proto_rawDescData
}

var file_proto_keydb_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_keydb_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_keydb_proto_goTypes = []any{
	(ErrorCode)(0),                  // 0: keydb.ErrorCode
	(*GetRequest)(nil),              // 1: keydb.GetRequest
	(*GetResponse)(nil),             // 2: keydb.GetResponse
	(*PutRequest)(nil),              // 3: keydb.PutRequest
	(*PutResponse)(nil),             // 4: keydb.PutResponse
	(*GetNodeInfoRequest)(nil),      // 5: keydb.GetNodeInfoRequest
	(*GetNodeInfoResponse)(nil),     // 6: keydb.GetNodeInfoResponse
	(*LoadSnapshotsRequest)(nil),    // 7: keydb.LoadSnapshotsRequest
	(*LoadSnapshotsResponse)(nil),   // 8: keydb.LoadSnapshotsResponse
	(*CreateSnapshotsRequest)(nil),  // 9: keydb.CreateSnapshotsRequest
	(*CreateSnapshotsResponse)(nil), // 10: keydb.CreateSnapshotsResponse
	(*ScaleRequest)(nil),            // 11: keydb.ScaleRequest
	(*ScaleResponse)(nil),           // 12: keydb.ScaleResponse
	(*ScaleCompleteRequest)(nil),    // 13: keydb.ScaleCompleteRequest
	(*ScaleCompleteResponse)(nil),   // 14: keydb.ScaleCompleteResponse
}
var file_proto_keydb_proto_depIdxs = []int32{
	0,  // 0: keydb.GetResponse.error_code:type_name -> keydb.ErrorCode
	0,  // 1: keydb.PutRequest.error_code:type_name -> keydb.ErrorCode
	0,  // 2: keydb.PutResponse.error_code:type_name -> keydb.ErrorCode
	1,  // 3: keydb.NodeService.Get:input_type -> keydb.GetRequest
	3,  // 4: keydb.NodeService.Put:input_type -> keydb.PutRequest
	5,  // 5: keydb.NodeService.GetNodeInfo:input_type -> keydb.GetNodeInfoRequest
	7,  // 6: keydb.NodeService.LoadSnapshots:input_type -> keydb.LoadSnapshotsRequest
	9,  // 7: keydb.NodeService.CreateSnapshots:input_type -> keydb.CreateSnapshotsRequest
	11, // 8: keydb.NodeService.Scale:input_type -> keydb.ScaleRequest
	13, // 9: keydb.NodeService.ScaleComplete:input_type -> keydb.ScaleCompleteRequest
	2,  // 10: keydb.NodeService.Get:output_type -> keydb.GetResponse
	4,  // 11: keydb.NodeService.Put:output_type -> keydb.PutResponse
	6,  // 12: keydb.NodeService.GetNodeInfo:output_type -> keydb.GetNodeInfoResponse
	8,  // 13: keydb.NodeService.LoadSnapshots:output_type -> keydb.LoadSnapshotsResponse
	10, // 14: keydb.NodeService.CreateSnapshots:output_type -> keydb.CreateSnapshotsResponse
	12, // 15: keydb.NodeService.Scale:output_type -> keydb.ScaleResponse
	14, // 16: keydb.NodeService.ScaleComplete:output_type -> keydb.ScaleCompleteResponse
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_proto_keydb_proto_init() }
func file_proto_keydb_proto_init() {
	if File_proto_keydb_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_keydb_proto_rawDesc), len(file_proto_keydb_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_keydb_proto_goTypes,
		DependencyIndexes: file_proto_keydb_proto_depIdxs,
		EnumInfos:         file_proto_keydb_proto_enumTypes,
		MessageInfos:      file_proto_keydb_proto_msgTypes,
	}.Build()
	File_proto_keydb_proto = out.File
	file_proto_keydb_proto_goTypes = nil
	file_proto_keydb_proto_depIdxs = nil
}
